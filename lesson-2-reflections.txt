What happens when you initialize a repository? Why do you need to do it?

	When I run "git init" command in my folder to initialize my repository,
	it creates a hidden folder called ".git". This hidden folder contains all
	the information about my repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	As agreed before, it is not necessary to put all the chnaged files in the
	repository as a commit, as the commit should contains only one logical change.
	And, here comes the staging area. We add to the staging area only the files
	that we need to bind together in one commit. Then, we commit the files in the
	staging area as one shot.

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
